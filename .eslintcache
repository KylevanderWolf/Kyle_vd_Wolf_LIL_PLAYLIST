[{"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\index.js":"1","C:\\Users\\kylev\\Desktop\\reduxstore\\src\\App.js":"2","C:\\Users\\kylev\\Desktop\\reduxstore\\src\\reportWebVitals.js":"3","C:\\Users\\kylev\\Desktop\\reduxstore\\src\\Reducers\\rootReducer.js":"4","C:\\Users\\kylev\\Desktop\\reduxstore\\src\\Reducers\\counterReducer.js":"5","C:\\Users\\kylev\\Desktop\\reduxstore\\src\\Actions\\actions.js":"6","C:\\Users\\kylev\\Desktop\\playlist\\src\\index.js":"7","C:\\Users\\kylev\\Desktop\\playlist\\src\\Reducers\\rootReducer.js":"8","C:\\Users\\kylev\\Desktop\\playlist\\src\\Actions\\actions.js":"9","C:\\Users\\kylev\\Desktop\\playlist\\src\\Appbar.js":"10","C:\\Users\\kylev\\Desktop\\playlist\\src\\Reducers\\formDataReducer.js":"11","C:\\Users\\kylev\\Desktop\\playlist\\src\\FavoritePage.js":"12","C:\\Users\\kylev\\Desktop\\playlist\\src\\HomePage.js":"13","C:\\Users\\kylev\\Desktop\\playlist\\src\\App.js":"14","C:\\Users\\kylev\\Desktop\\playlist\\src\\SnackbarComponent.js":"15","C:\\Users\\kylev\\Desktop\\playlist\\src\\Reducers\\filterReducer.js":"16","C:\\Users\\kylev\\Desktop\\playlist\\src\\trackListForm.js":"17","C:\\Users\\kylev\\Desktop\\playlist\\src\\TrackListForm.js":"18","C:\\Users\\kylev\\Desktop\\playlist\\src\\TrackList.js":"19"},{"size":492,"mtime":1612008647614,"results":"20","hashOfConfig":"21"},{"size":481,"mtime":1612009420645,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":192,"mtime":1612351592080,"results":"24","hashOfConfig":"21"},{"size":294,"mtime":1612009087342,"results":"25","hashOfConfig":"21"},{"size":226,"mtime":1612009115556,"results":"26","hashOfConfig":"21"},{"size":484,"mtime":1613557675293,"results":"27","hashOfConfig":"28"},{"size":276,"mtime":1613678115832,"results":"29","hashOfConfig":"28"},{"size":351,"mtime":1613678044828,"results":"30","hashOfConfig":"28"},{"size":2205,"mtime":1613638652246,"results":"31","hashOfConfig":"28"},{"size":829,"mtime":1613470824735,"results":"32","hashOfConfig":"28"},{"size":9124,"mtime":1613745304218,"results":"33","hashOfConfig":"28"},{"size":1691,"mtime":1613743791723,"results":"34","hashOfConfig":"28"},{"size":458,"mtime":1613566902010,"results":"35","hashOfConfig":"28"},{"size":1129,"mtime":1613744289330,"results":"36","hashOfConfig":"28"},{"size":225,"mtime":1613682954303,"results":"37","hashOfConfig":"28"},{"size":5501,"mtime":1613743561674,"results":"38","hashOfConfig":"28"},{"size":5382,"mtime":1613744870957,"results":"39","hashOfConfig":"28"},{"size":5075,"mtime":1613745206438,"results":"40","hashOfConfig":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"16hxi3n",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"13h6glx",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\index.js",[],["82","83"],"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\App.js",[],"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\reportWebVitals.js",[],"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\Reducers\\rootReducer.js",[],"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\Reducers\\counterReducer.js",[],"C:\\Users\\kylev\\Desktop\\reduxstore\\src\\Actions\\actions.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\index.js",[],["84","85"],"C:\\Users\\kylev\\Desktop\\playlist\\src\\Reducers\\rootReducer.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\Actions\\actions.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\Appbar.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\Reducers\\formDataReducer.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\FavoritePage.js",["86"],"import React, { useEffect, useState } from 'react'\r\nimport Appbar from './Appbar'\r\nimport { Grid } from '@material-ui/core/';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Typography, TextField } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { filteredArray } from './Actions/actions'\r\n\r\n//STYLING\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '90vh',\r\n        backgroundColor: 'white'\r\n    },\r\n    favoriteTracksContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: 'auto',\r\n    },\r\n    table: {\r\n        minHeight: '60vh',\r\n        maxHeight: 'auto',\r\n        boxShadow: `rgba(100, 100, 111, 0.2) 0px 7px 29px 0px`,\r\n    },\r\n    listItem: {\r\n    },\r\n    selectOptions: {\r\n        boxShadow: `rgba(149, 157, 165, 0.2) 0px 8px 24px`,\r\n        outline: 'none',\r\n        border: '1px solid #a2a2a2',\r\n        cursor: 'pointer',\r\n        padding: '4px',\r\n        fontSize: '0,9em'\r\n    },\r\n    formControl: {\r\n        minWidth: '130px',\r\n        margin: '0px 10px'\r\n    },\r\n}\r\n\r\n\r\nconst FavoritePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [searchInput, setSearchInput] = useState({\r\n        artistName: '',\r\n        title: '',\r\n        genre: '',\r\n        rating: \"\",\r\n    })\r\n\r\n    //STATE FROM REDUX\r\n    const searchArray = useSelector(state => state.filteredArray)\r\n    const favoriteTracks = useSelector(state => state.formData.filter(e => e.favorite === true))\r\n\r\n\r\n    //CHANGE STATE INPUT FIELD VALUES\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        const { value, name } = e.target\r\n        setSearchInput({ ...searchInput, [name]: value })\r\n    }\r\n\r\n    //FILTER SEARCH \r\n    useEffect(() => {\r\n        const filterSearch = favoriteTracks.filter(e =>\r\n            e.rating.toString().includes(searchInput.rating) &&\r\n            e.songTitle.includes(searchInput.title) &&\r\n            e.artistName.includes(searchInput.artistName) &&\r\n            e.genre.includes(searchInput.genre)\r\n        )\r\n        return filterSearch ? dispatch(filteredArray(filterSearch)) : dispatch(filteredArray(favoriteTracks))\r\n    }, [searchInput])\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            <Appbar />\r\n            <Grid container style={styles.container}>\r\n                <Grid style={styles.favoriteTracksContainer} item xs={12} sm={12} md={11} lg={8} xl={6}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        align=\"center\"\r\n                        gutterBottom\r\n                        style={{ marginBottom: '20px' }}\r\n                    >\r\n                        Favorite Tracks\r\n                    </Typography>\r\n                    <TableContainer style={styles.table} component={Paper}>\r\n                        <Table aria-label=\"simple table\" stickyHeader>\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">\r\n                                        <TextField\r\n                                            onChange={handleChange}\r\n                                            name=\"artistName\"\r\n                                            value={searchInput.artistName}\r\n                                            style={{ minWidth: '100px' }}\r\n                                            autoComplete='off'\r\n                                            label=\"Search ArtistName\" >\r\n                                        </TextField>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <TextField\r\n                                            onChange={handleChange}\r\n                                            name=\"title\"\r\n                                            value={searchInput.title}\r\n                                            style={{ minWidth: '100px' }}\r\n                                            autoComplete='off'\r\n                                            label=\"Search Title\" >\r\n                                        </TextField>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <FormControl style={styles.formControl}>\r\n                                            <InputLabel id=\"demo-simple-select-label\">Genre</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                onChange={handleChange}\r\n                                                value={searchInput.genre}\r\n                                                name=\"genre\"\r\n                                            >\r\n                                                <MenuItem value=\"\">All</MenuItem>\r\n                                                <MenuItem value='House'>House</MenuItem>\r\n                                                <MenuItem value='Techno'>Techno</MenuItem>\r\n                                                <MenuItem value='R&B'>R&B</MenuItem>\r\n                                                <MenuItem value='Hip-Hop'>Hip-Hop</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <FormControl style={styles.formControl}>\r\n                                            <InputLabel id=\"demo-simple-select-label\">Rating</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                onChange={handleChange}\r\n                                                value={searchInput.rating}\r\n                                                name=\"rating\"\r\n                                            >\r\n                                                <MenuItem value=\"\">All</MenuItem>\r\n                                                <MenuItem value='0'>0</MenuItem>\r\n                                                <MenuItem value='1'>1</MenuItem>\r\n                                                <MenuItem value='2'>2</MenuItem>\r\n                                                <MenuItem value='3'>3</MenuItem>\r\n                                                <MenuItem value='4'>4</MenuItem>\r\n                                                <MenuItem value='5'>5</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {searchArray.map(item => (\r\n                                    <TableRow key={item.id} style={styles.listItem}>\r\n                                        <TableCell align=\"left\">{item.artistName}</TableCell>\r\n                                        <TableCell align=\"left\">{item.songTitle}</TableCell>\r\n                                        <TableCell align=\"left\">{item.genre}</TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Rating\r\n                                                style={styles.rating}\r\n                                                size=\"large\"\r\n                                                name=\"rating\"\r\n                                                value={item.rating}\r\n                                                readOnly\r\n                                                required\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default FavoritePage","C:\\Users\\kylev\\Desktop\\playlist\\src\\HomePage.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\App.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\SnackbarComponent.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\Reducers\\filterReducer.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\trackListForm.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\TrackListForm.js",[],"C:\\Users\\kylev\\Desktop\\playlist\\src\\TrackList.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":88,"column":8,"nodeType":"95","endLine":88,"endColumn":21,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'favoriteTracks'. Either include them or remove the dependency array.","ArrayExpression",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [dispatch, favoriteTracks, searchInput]",{"range":"102","text":"103"},[2846,2859],"[dispatch, favoriteTracks, searchInput]"]